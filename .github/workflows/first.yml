name: Test and Deploy workflow
on: [ push, workflow_dispatch ]
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Install NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Create cache
        id: cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: deps-node-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Run Tests
        run: npm test
  build:
    needs: test
    runs-on: ubuntu-latest
    outputs:
      filename: ${{ steps.fileNameId.outputs.filename }}
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Install NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Create cache
        id: cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: deps-node-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Build project
        run: npm run build
      - name: Save file name
        id: fileNameId
        run: find dist/assets/*.js -type f -execdir echo 'filename={}' >> $GITHUB_OUTPUT ';'
      - name: Create artifact
        uses: actions/upload-artifact@v3
        with:
          name: dist-artifact
          path: dist
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist-artifact
      - name: Show artifacts
        run: ls
      - name: Show filename
        run: echo "The file name is ${{ needs.build.outputs.filename }}. Lets do someting."
  report:
    needs: test
    if: failure()
    runs-on: ubuntu-latest
    steps:
      - name: Print Report
        run: echo "Something went wrong".
